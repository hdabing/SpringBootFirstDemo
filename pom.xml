<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>SpringBootFirstDemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpringBootFirstDemo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<org.mybatis.spring.boot.version>1.3.1</org.mybatis.spring.boot.version>
		<tk.mybatis.mapper.spring.boot.version>1.1.5</tk.mybatis.mapper.spring.boot.version>
		<!-- Mybatis-generator插件版本 -->
		<org.mybatis.generator.version>1.3.5</org.mybatis.generator.version>
		<tk.mybatis.mapper.version>3.4.0</tk.mybatis.mapper.version>
		<!-- PageHelper分页插件版本 -->
		<pagehelper.spring.boot.version>1.2.5</pagehelper.spring.boot.version>
		<!-- druid数据库连接池版本 -->
		<druid.spring.boot.version>1.1.10</druid.spring.boot.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 添加支持web的模块 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- 添加热启动 .生产环境不建议使用热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 添加mysql数据库支持 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- 添加mybatis依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${org.mybatis.spring.boot.version}</version>
		</dependency>

		<!-- 通用mapper -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>${tk.mybatis.mapper.spring.boot.version}</version>
		</dependency>

		<!-- PageHelper分页插件版本 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper.spring.boot.version}</version>
		</dependency>

		<!--数据库连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.spring.boot.version}</version>
		</dependency>
		
	</dependencies>
	<profiles>
		<profile>
			<id>main</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope><!-- 部署时去除Spring Boot自带的Tomcat插件 -->
				</dependency>
			</dependencies>
		</profile>
        <profile>
            <!-- 本地开发环境 -->
            <id>development</id>
            <properties>
                <profiles.active>development</profiles.active>
                <!--<deploy.url>http://host:port/manager/text</deploy.url>-->
            </properties>
             <!-- 默认配置为本地开发环境 -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- 测试环境 -->
            <id>test</id>
            <properties>
                <profiles.active>test</profiles.active>
                <!--<deploy.url>http://host:port/manager/text</deploy.url>-->
            </properties>
        </profile>
        <profile>
            <!-- 生产环境 -->
            <!-- Maven只打包生产环境配置命令：mvn clean package -P production-->
            <id>production</id>
            <properties>
                <profiles.active>production</profiles.active>
                <!--<deploy.url>http://host:port/manager/text</deploy.url>-->
            </properties>
        </profile>
	</profiles>

	<build>
		<resources>
			<!-- 先在资源根目录排除所有的资源文件 -->
			<resource>
				<directory>src/main/resources</directory>
				<!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 -->
				 <excludes>
                    <exclude>test/*</exclude>
                    <exclude>production/*</exclude>
                    <exclude>development/*</exclude>
                </excludes>
			</resource>
			<resource>
                <directory>src/main/resources/${profiles.active}</directory>
            </resource>
		</resources>
		<plugins>
			<plugin>
				<!-- spring-boot-maven-plugin插件 -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Mybatis-generator插件,用于自动生成Mapper和POJO -->
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>${org.mybatis.generator.version}</version>
				<configuration>
					<!-- 配置文件的位置 -->
					<configurationFile>
						${basedir}/src/main/resources/generator/mybatis-generator-config-master.xml
					</configurationFile>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
					<dependency>
						<groupId>tk.mybatis</groupId>
						<artifactId>mapper</artifactId>
						<version>${tk.mybatis.mapper.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>